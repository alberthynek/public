                 -1   $modde2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              2   
0000              3            CSEG at 0
0000              4            ORG 000H
0000 020927       5            ljmp startup
                 -1   	$include(adctable.asm)
0803           1029            $LIST
0803              7            
0030              8            DSEG at 30H
0030              9            bcd: ds 2
0032             10            x: ds 2
0034             11            y: ds 2
0036             12            
0000             13            BSEG
0000             14            nf: dbit 1
0001             15            
0803             16            CSEG
0803             17            
0803             18            myLUT:
0803 C0F9A4B0    19       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H        ; 0 TO 4
     99
0808 9282F880    20       DB 092H, 082H, 0F8H, 080H, 090H        ; 4 TO 9
     90
080D 3F          21       DB 03FH                                                                 ; minus sign
080E             22       
080E             23       
080E             24       Display:
080E 900803      25            mov dptr, #myLUT
0811             26            ; Display Digit 0
0811 E530        27       mov A, bcd+0
0813 540F        28       anl a, #0fh
0815 93          29       movc A, @A+dptr
0816 F591        30       mov HEX0, A
0818             31            ; Display Digit 1
0818 E530        32       mov A, bcd+0
081A C4          33       swap a
081B 540F        34       anl a, #0fh
081D 93          35       movc A, @A+dptr
081E F592        36       mov HEX1, A
0820             37            ; Display Digit 2
0820 E531        38       mov A, bcd+1
0822 540F        39       anl a, #0fh
0824 93          40       movc A, @A+dptr
0825 F593        41       mov HEX2, A
0827             42            ; Display Digit 3
0827 E531        43       mov A, bcd+1
0829 C4          44       swap a
082A 540F        45       anl a, #0fh
082C 93          46       movc A, @A+dptr
082D F594        47       mov HEX3, A
082F 22          48       ret
0830             49   
0830             50   ClearDisplay:            ;clears display memory and hex displays 0-4
0830 E4          51            clr a
0831 F530        52            mov bcd+0, a  ;bcd+0 is an 8-bit value, but 2 bcd digits
0833 F531        53            mov bcd+1, a
0835 F532        54            mov bcd+2, a
0837 759140      55            mov HEX0,#40H ;Displays "0"
083A 759240      56            mov HEX1,#40H
083D 759340      57            mov HEX2,#40H
0840 759440      58            mov HEX3,#40H
0843 22          59            ret
0844             60            
0844             61            Wait50ms:
0844             62   ;33.33MHz, 1 clk per cycle: 0.03us
0844 781E        63            mov R0, #30
0846 794A        64   L3: mov R1, #74
0848 7AFA        65   L2: mov R2, #250
084A DAFE        66   L1: djnz R2, L1 ;3*250*0.03us=22.5us
084C D9FA        67       djnz R1, L2 ;74*22.5us=1.665ms
084E D8F6        68       djnz R0, L3 ;1.665ms*30=50ms
0850 22          69       ret
0851             70       
0851             71       ReadNumber:
0851 85E832      72       mov x+0, SWA
0854 E595        73       mov A, SWB
0856 5403        74       anl A, #00000011B
0858 F533        75       mov x+1, A
085A 22          76       ret
085B             77       
085B             78       hex2bcd:
085B C0E0        79            push acc
085D C0D0        80            push psw
085F C000        81            push AR0
0861             82            
0861 E4          83            clr a
0862 F530        84            mov bcd+0, a ; Initialize BCD to 00-00-00 
0864 F531        85            mov bcd+1, a
0866 7810        86            mov r0, #16  ; Loop counter.
0868             87   
0868             88            hex2bcd_L0:
0868             89            ; Shift binary left     
0868 E533        90            mov a, x+1
086A A2E7        91            mov c, acc.7 ; This way x remains unchanged!
086C E532        92            mov a, x+0
086E 33          93            rlc a
086F F532        94            mov x+0, a
0871 E533        95            mov a, x+1
0873 33          96            rlc a
0874 F533        97            mov x+1, a
0876             98       
0876             99            ; Perform bcd + bcd + carry using BCD arithmetic
0876 E530       100            mov a, bcd+0
0878 3530       101            addc a, bcd+0
087A D4         102            da a
087B F530       103            mov bcd+0, a
087D E531       104            mov a, bcd+1
087F 3531       105            addc a, bcd+1
0881 D4         106            da a
0882 300008     107            jnb nf, continue
0885 D2E7       108            setb acc.7
0887 C2E6       109            clr acc.6
0889 D2E5       110            setb acc.5
088B C2E4       111            clr acc.4
088D            112            continue:
088D F531       113            mov bcd+1, a
088F            114   
088F D8D7       115            djnz r0, hex2bcd_L0
0891            116   
0891 D000       117            pop AR0
0893 D0D0       118            pop psw
0895 D0E0       119            pop acc
0897 22         120            ret
0898            121   
0898            122            checkNeg:
0898 E533       123            mov a, x+1
089A 20E703     124            jb acc.7, negative
089D C200       125            clr nf
089F 22         126            ret
08A0            127            negative:
08A0 1208A6     128            lcall fixNeg
08A3 D200       129            setb nf
08A5 22         130            ret
08A6            131            
08A6            132            fixNeg:
08A6 C0E0       133            push acc
08A8 C0D0       134            push psw
08AA C3         135            clr c
08AB E4         136            clr a
08AC 9532       137            subb a, x+0
08AE F532       138            mov x+0, a
08B0 E4         139            clr a
08B1 9533       140            subb a, x+1
08B3 F533       141            mov x+1, a
08B5 D0D0       142            pop psw
08B7 D0E0       143            pop acc
08B9 22         144            ret
08BA            145            
08BA            146            ADCtoTemp:
08BA 900003     147            mov dptr, #adctable
08BD 753402     148       mov y, #2                        ; Each row has two entries (DW is two bytes)
08C0 1208F1     149       lcall        mul16                ; Increment by two
08C3 858335     150       mov y+1, dph                ; Sets high to the first 8-bits of y
08C6 858234     151       mov y+0, dpl                ; Sets low to the last 8-bits of y
08C9 1208DC     152       lcall add16                        ; 
08CC 853383     153       mov dph, x+1                ; Sets high to the first 8-bits of x
08CF 853282     154       mov dpl, x+0                ; Sets low to the last 8-bits of x
08D2            155   
08D2 E4         156       clr a
08D3 93         157       movc a, @a+dptr                ; Selects the first 8-bits to display
08D4 F533       158       mov x+1, a                        ; Sets the first 8-bits of the value
08D6 A3         159       inc dptr                        ; Increments dptr to select second bit
08D7 E4         160       clr a 
08D8 93         161       movc a, @a+dptr                ; Selects the second 8-bits to display
08D9 F532       162       mov x+0, a                        ; Sets the second 8-bits of the value
08DB 22         163       ret
08DC            164   
08DC            165   
08DC            166   add16:
08DC C0E0       167            push acc
08DE C0D0       168            push psw
08E0 E532       169            mov a, x+0
08E2 2534       170            add a, y+0
08E4 F532       171            mov x+0, a
08E6 E533       172            mov a, x+1
08E8 3535       173            addc a, y+1
08EA F533       174            mov x+1, a
08EC D0D0       175            pop psw
08EE D0E0       176            pop acc
08F0 22         177            ret
08F1            178   
08F1            179   mul16:
08F1 C0E0       180            push acc
08F3 C0F0       181            push b
08F5 C0D0       182            push psw
08F7 C000       183            push AR0
08F9 C001       184            push AR1
08FB            185                    
08FB            186            ; R0 = x+0 * y+0
08FB            187            ; R1 = x+1 * y+0 + x+0 * y+1
08FB            188            
08FB            189            ; Byte 0
08FB E532       190            mov     a,x+0
08FD 8534F0     191            mov     b,y+0
0900 A4         192            mul     ab              ; x+0 * y+0
0901 F8         193            mov     R0,a
0902 A9F0       194            mov     R1,b
0904            195            
0904            196            ; Byte 1
0904 E533       197            mov     a,x+1
0906 8534F0     198            mov     b,y+0
0909 A4         199            mul     ab              ; x+1 * y+0
090A 29         200            add     a,R1
090B F9         201            mov     R1,a
090C E4         202            clr     a
090D 35F0       203            addc a,b
090F FA         204            mov     R2,a
0910            205            
0910 E532       206            mov     a,x+0
0912 8535F0     207            mov     b,y+1
0915 A4         208            mul     ab              ; x+0 * y+1
0916 29         209            add     a,R1
0917 F9         210            mov     R1,a
0918            211            
0918 8933       212            mov     x+1,R1
091A 8832       213            mov     x+0,R0
091C            214   
091C D001       215            pop AR1
091E D000       216            pop AR0
0920 D0D0       217            pop psw
0922 D0F0       218            pop b
0924 D0E0       219            pop acc
0926            220            
0926 22         221            ret    
0927            222       
0927            223       Startup:
0927 75817F     224       mov SP, #7FH
092A E4         225            clr a
092B F5E8       226            mov LEDRA, a
092D F595       227            mov LEDRB, a
092F F59E       228            mov LEDRC, a
0931 F5F8       229            mov LEDG, a
0933 F530       230            mov bcd+0, a
0935 F531       231            mov bcd+1, a
0937 12080E     232            lcall Display
093A            233            
093A            234            myProgram:
093A 120851     235            lcall ReadNumber
093D 1208BA     236            lcall ADCtoTemp
0940 120898     237            lcall checkNeg
0943 12085B     238            lcall hex2bcd
0946 12080E     239            lcall display
0949 02093A     240            ljmp myProgram
094C            241            
094C            242            en
